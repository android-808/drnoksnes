#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

# Determine Maemo version
MAEMO_VERSION := $(shell cut -d"." -f1 /etc/maemo_version)

# Determine app version from debian changelog
GAME_VERSION := $(shell head -n 1 debian/changelog | sed 's/[^0-9.-]//g')

CFLAGS = -Wall -g -DMAEMO -DMAEMO_VERSION=$(MAEMO_VERSION)
GUI_CFLAGS := $(CFLAGS)
LDFLAGS = -Wl,-z,defs

M4=m4
M4DEFS=-DMAEMO_MAJOR=$(MAEMO_VERSION)

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else ifneq (,$(findstring arm,$(DEB_BUILD_GNU_TYPE)))
	CFLAGS += -O2
	GUI_CFLAGS += -Os
	ifneq (,$(findstring vfp,$(DEB_BUILD_OPTIONS)))
		CFLAGS += -march=armv6j -mtune=arm1136jf-s -mfpu=vfp -mfloat-abi=softfp
	endif
	# Fixes hang while exiting on Diablo.
	CFLAGS += -static-libgcc
else # x86
	crash ## Cannot build in x86
endif

debian/control: debian/control.m4
	$(M4) $(M4DEFS) debian/control.m4 > debian/control

configure: configure-stamp
configure-stamp:
	dh_testdir
	$(M4) $(M4DEFS) debian/control.m4 > debian/control
	$(M4) $(M4DEFS) debian/drnoksnes.postinst.m4 > debian/drnoksnes.postinst
	touch configure-stamp

build: build-stamp
build-stamp: configure-stamp 
	dh_testdir
	$(MAKE) CFLAGS="$(CFLAGS)" CXXFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS)" GUI_CFLAGS="$(GUI_CFLAGS)" GAME_VERSION="$(GAME_VERSION)"
	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp
	-$(MAKE) clean
	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs
	$(MAKE) DESTDIR=$(CURDIR)/debian/drnoksnes install

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
#	dh_installchangelogs 
#	dh_installdocs
#	dh_installexamples
#	dh_installman
	dh_link
	dh_strip --dbg-package=drnoksnes-dbg
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
